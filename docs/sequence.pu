@startuml
actor "Game Client" as GC
participant "Frontend" as F
participant "Group Accumulator" as G
participant "Accumulator" as A
participant "Matcher" as M
participant "Dispenser" as D

box "Custom Logic Services" #White
    participant "Group Aggregation Service" as GAS
    participant "Matchmaker Service" as MS
    participant "Assignment Service" as AS
end box

database "Key Value Store" as KV
database "Accumulator Stream" as STA
database "Matcher Stream" as STM
database "Dispenser Stream" as STD
database "PubSub" as PS


GC -> F: CreateMatchRequest
activate F
alt Group Match
    loop until all members of the group have submitted their match request
        F -> G
        note right
            Players are expected to have self-organised using an
            external party service, they should have shared a UUID for
            this Match Request amongst themselves and should have
            listed their party members in their match request.
        end note
    end
    G -> GAS: group data
    activate GAS
    return: Match Request

    G -> KV: SETNX MatchRequest
    activate KV
    return
    G -> STA: Send MatchRequest Reference
    activate STA
    return
else Solo Match Request

    F -> KV: SETNX MatchRequest
    activate KV
    return
    F -> STA: Send MatchRequest Reference
    activate STA
    return
end

activate F
    F -> PS: Subscribe MatchRequest
    activate PS

        A -> STA: Stream MatchRequest References
        activate STA
        loop until Accumulator reaches max MatchRequests or max delay
        return MatchRequest Reference
        end

        A -> STM: Batch of Match Request References
        activate STM
        return

        M -> STM: Stream Batches of Match Request References
        loop for each Batch of Match Request References
            activate STM
            return Batch of Match Request References
            M -> KV: GET Match Requests
            activate KV
            return Match Requests

            M -> MS: MakeMatches
            activate MS
            return Matches

            loop for Match in Matches
                M -> KV: MSETNX Assign Match.MatchRequests to Match
                note right
                    this ensures that none
                    of the MatchRequests have
                    already been assigned
                end note
                activate KV
                return

                M -> KV: SET Match
                activate KV
                return

                M -> STD: Send Match Reference
                activate STD
                return
            end
        end

        D -> STD: Stream Match References
        activate STD
            loop for each Match Reference
                return Match Reference

                D -> KV: GET Match
                activate KV
                return

                D -> AS: Make Assignment
                activate AS
                return

                D -> KV: MSET Match.MatchRequests
                note right
                    we update all the MatchRequests
                    in the match with the
                    assignment details
                end note
                activate KV
                return

                loop for MatchRequest in Match
                    D -> PS: Publish MatchRequest
                end
            end

        return MatchRequest Reference
    F -> KV: GET MatchRequest
    activate KV
    return
return Game Server address & ports
@enduml
