// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: db/v1/documents.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a UUID generated by the client
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// list of player ids linked to this request
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	// matchmaking data specific to this player / group
	MatchRequestData *MatchRequestData `protobuf:"bytes,3,opt,name=match_request_data,json=matchRequestData,proto3" json:"match_request_data,omitempty"`
	// A queue is a collection of tickets to be matched together, it controls how tickets are matched
	MatchmakingQueue string `protobuf:"bytes,4,opt,name=matchmaking_queue,json=matchmakingQueue,proto3" json:"matchmaking_queue,omitempty"`
	// A list of latency data for game server instances
	Rtts []*RTT `protobuf:"bytes,5,rep,name=rtts,proto3" json:"rtts,omitempty"`
	// record the time the ticket was created in the db
	CreateTime int64 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// the result of matchmaking
	GameServer *GameServer `protobuf:"bytes,7,opt,name=game_server,json=gameServer,proto3" json:"game_server,omitempty"`
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_documents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_documents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_db_v1_documents_proto_rawDescGZIP(), []int{0}
}

func (x *MatchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MatchRequest) GetMatchRequestData() *MatchRequestData {
	if x != nil {
		return x.MatchRequestData
	}
	return nil
}

func (x *MatchRequest) GetMatchmakingQueue() string {
	if x != nil {
		return x.MatchmakingQueue
	}
	return ""
}

func (x *MatchRequest) GetRtts() []*RTT {
	if x != nil {
		return x.Rtts
	}
	return nil
}

func (x *MatchRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MatchRequest) GetGameServer() *GameServer {
	if x != nil {
		return x.GameServer
	}
	return nil
}

type MatchRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doubles   map[string]float64 `protobuf:"bytes,1,rep,name=doubles,proto3" json:"doubles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Strings   map[string]string  `protobuf:"bytes,2,rep,name=strings,proto3" json:"strings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags      []string           `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	ExtraData []byte             `protobuf:"bytes,4,opt,name=extra_data,proto3" json:"extra_data,omitempty"`
}

func (x *MatchRequestData) Reset() {
	*x = MatchRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_documents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequestData) ProtoMessage() {}

func (x *MatchRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_documents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequestData.ProtoReflect.Descriptor instead.
func (*MatchRequestData) Descriptor() ([]byte, []int) {
	return file_db_v1_documents_proto_rawDescGZIP(), []int{1}
}

func (x *MatchRequestData) GetDoubles() map[string]float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

func (x *MatchRequestData) GetStrings() map[string]string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *MatchRequestData) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MatchRequestData) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

type RTT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Milliseconds int64  `protobuf:"varint,2,opt,name=milliseconds,proto3" json:"milliseconds,omitempty"`
}

func (x *RTT) Reset() {
	*x = RTT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_documents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTT) ProtoMessage() {}

func (x *RTT) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_documents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTT.ProtoReflect.Descriptor instead.
func (*RTT) Descriptor() ([]byte, []int) {
	return file_db_v1_documents_proto_rawDescGZIP(), []int{2}
}

func (x *RTT) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RTT) GetMilliseconds() int64 {
	if x != nil {
		return x.Milliseconds
	}
	return 0
}

type GameServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// game_server_ip is the IP address of the allocated GameServer, or empty if none is allocated
	GameServerIp string `protobuf:"bytes,1,opt,name=game_server_ip,proto3" json:"game_server_ip,omitempty"`
	// game_server_ports maps labels to ports on the allocated GameServer
	GameServerPorts []*GameServerPort `protobuf:"bytes,2,rep,name=game_server_ports,proto3" json:"game_server_ports,omitempty"`
}

func (x *GameServer) Reset() {
	*x = GameServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_documents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServer) ProtoMessage() {}

func (x *GameServer) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_documents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServer.ProtoReflect.Descriptor instead.
func (*GameServer) Descriptor() ([]byte, []int) {
	return file_db_v1_documents_proto_rawDescGZIP(), []int{3}
}

func (x *GameServer) GetGameServerIp() string {
	if x != nil {
		return x.GameServerIp
	}
	return ""
}

func (x *GameServer) GetGameServerPorts() []*GameServerPort {
	if x != nil {
		return x.GameServerPorts
	}
	return nil
}

type GameServerPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the port
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// port number
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *GameServerPort) Reset() {
	*x = GameServerPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_v1_documents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameServerPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameServerPort) ProtoMessage() {}

func (x *GameServerPort) ProtoReflect() protoreflect.Message {
	mi := &file_db_v1_documents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameServerPort.ProtoReflect.Descriptor instead.
func (*GameServerPort) Descriptor() ([]byte, []int) {
	return file_db_v1_documents_proto_rawDescGZIP(), []int{4}
}

func (x *GameServerPort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameServerPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_db_v1_documents_proto protoreflect.FileDescriptor

var file_db_v1_documents_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x22, 0xa1,
	0x02, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x72, 0x74, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x54, 0x54, 0x52, 0x04, 0x72, 0x74, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0xbe, 0x02, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3a, 0x0a, 0x0c, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x03, 0x52, 0x54, 0x54, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x79, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x12, 0x43, 0x0a, 0x11, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x11, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x38, 0x0a,
	0x0e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x72, 0x79, 0x2d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x72, 0x79,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_v1_documents_proto_rawDescOnce sync.Once
	file_db_v1_documents_proto_rawDescData = file_db_v1_documents_proto_rawDesc
)

func file_db_v1_documents_proto_rawDescGZIP() []byte {
	file_db_v1_documents_proto_rawDescOnce.Do(func() {
		file_db_v1_documents_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_v1_documents_proto_rawDescData)
	})
	return file_db_v1_documents_proto_rawDescData
}

var file_db_v1_documents_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_db_v1_documents_proto_goTypes = []interface{}{
	(*MatchRequest)(nil),     // 0: db.v1.MatchRequest
	(*MatchRequestData)(nil), // 1: db.v1.MatchRequestData
	(*RTT)(nil),              // 2: db.v1.RTT
	(*GameServer)(nil),       // 3: db.v1.GameServer
	(*GameServerPort)(nil),   // 4: db.v1.GameServerPort
	nil,                      // 5: db.v1.MatchRequestData.DoublesEntry
	nil,                      // 6: db.v1.MatchRequestData.StringsEntry
}
var file_db_v1_documents_proto_depIdxs = []int32{
	1, // 0: db.v1.MatchRequest.match_request_data:type_name -> db.v1.MatchRequestData
	2, // 1: db.v1.MatchRequest.rtts:type_name -> db.v1.RTT
	3, // 2: db.v1.MatchRequest.game_server:type_name -> db.v1.GameServer
	5, // 3: db.v1.MatchRequestData.doubles:type_name -> db.v1.MatchRequestData.DoublesEntry
	6, // 4: db.v1.MatchRequestData.strings:type_name -> db.v1.MatchRequestData.StringsEntry
	4, // 5: db.v1.GameServer.game_server_ports:type_name -> db.v1.GameServerPort
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_db_v1_documents_proto_init() }
func file_db_v1_documents_proto_init() {
	if File_db_v1_documents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_v1_documents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_documents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_documents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_documents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_v1_documents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameServerPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_v1_documents_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_v1_documents_proto_goTypes,
		DependencyIndexes: file_db_v1_documents_proto_depIdxs,
		MessageInfos:      file_db_v1_documents_proto_msgTypes,
	}.Build()
	File_db_v1_documents_proto = out.File
	file_db_v1_documents_proto_rawDesc = nil
	file_db_v1_documents_proto_goTypes = nil
	file_db_v1_documents_proto_depIdxs = nil
}
