syntax = "proto3";
package api.v1;
option go_package = "github.com/rivalry-matchmaker/rivalry/pkg/pb/api/v1";

import "api/v1/messages.proto";

message MatchRequest {
  // a UUID generated by the client
  string id = 1;

  // the ID of this player
  string player_id = 2;

  // matchmaking data specific to the party
  PartyData party_data = 3;

  // matchmaking data specific to this player
  MatchRequestData match_request_data = 4;

  // A queue is a collection of tickets to be matched together, it controls how tickets are matched
  string matchmaking_queue = 5;

  // A list of latency data for game server instances
  repeated RTT rtts = 6;
}


message PartyData {
  // a list of player ids that are in a party with this player
  repeated string party_members = 1;
}

message MatchResponse {
    GameServer game_server = 1;
}

service RivalryService {
  // route into matchmaking
  rpc Match(MatchRequest) returns (stream MatchResponse) {}
}
